   Compiling database_logger v0.1.0 (/home/luis/Source/inmobify-services/database_logger)
warning: unused import: `diesel::PgConnection`
 --> database_logger/src/dal/repository.rs:1:5
  |
1 | use diesel::PgConnection;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `operations`
 --> database_logger/src/dal/sch_models.rs:1:42
  |
1 | use crate::dal::schema::{operation_logs, operations};
  |                                          ^^^^^^^^^^

error[E0277]: the trait bound `uuid::Uuid: diesel::Expression` is not satisfied
 --> database_logger/src/dal/sch_models.rs:7:10
  |
7 | #[derive(Insertable)]
  |          ^^^^^^^^^^ the trait `diesel::Expression` is not implemented for `uuid::Uuid`
  |
  = help: the following other types implement trait `diesel::Expression`:
            &T
            (T0, T1)
            (T0, T1, T2)
            (T0, T1, T2, T3)
            (T0, T1, T2, T3, T4)
            (T0, T1, T2, T3, T4, T5)
            (T0, T1, T2, T3, T4, T5, T6)
            (T0, T1, T2, T3, T4, T5, T6, T7)
          and 143 others
  = note: required for `uuid::Uuid` to implement `AsExpression<diesel::sql_types::Text>`
  = note: this error originates in the derive macro `Insertable` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `diesel::sql_types::Inet: diesel::Expression` is not satisfied
 --> database_logger/src/dal/sch_models.rs:7:10
  |
7 | #[derive(Insertable)]
  |          ^^^^^^^^^^ the trait `diesel::Expression` is not implemented for `diesel::sql_types::Inet`
  |
  = help: the following other types implement trait `diesel::Expression`:
            &T
            (T0, T1)
            (T0, T1, T2)
            (T0, T1, T2, T3)
            (T0, T1, T2, T3, T4)
            (T0, T1, T2, T3, T4, T5)
            (T0, T1, T2, T3, T4, T5, T6)
            (T0, T1, T2, T3, T4, T5, T6, T7)
          and 143 others
  = note: required for `diesel::sql_types::Inet` to implement `AsExpression<diesel::sql_types::Inet>`
  = note: this error originates in the derive macro `Insertable` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `uuid::Uuid: diesel::Expression` is not satisfied
 --> database_logger/src/dal/sch_models.rs:7:10
  |
7 | #[derive(Insertable)]
  |          ^^^^^^^^^^ the trait `diesel::Expression` is not implemented for `uuid::Uuid`
  |
  = help: the following other types implement trait `diesel::Expression`:
            &T
            (T0, T1)
            (T0, T1, T2)
            (T0, T1, T2, T3)
            (T0, T1, T2, T3, T4)
            (T0, T1, T2, T3, T4, T5)
            (T0, T1, T2, T3, T4, T5, T6)
            (T0, T1, T2, T3, T4, T5, T6, T7)
          and 143 others
  = note: required for `&'insert uuid::Uuid` to implement `diesel::Expression`
  = note: required for `&'insert uuid::Uuid` to implement `AsExpression<diesel::sql_types::Text>`
  = note: this error originates in the derive macro `Insertable` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `diesel::sql_types::Inet: diesel::Expression` is not satisfied
 --> database_logger/src/dal/sch_models.rs:7:10
  |
7 | #[derive(Insertable)]
  |          ^^^^^^^^^^ the trait `diesel::Expression` is not implemented for `diesel::sql_types::Inet`
  |
  = help: the following other types implement trait `diesel::Expression`:
            &T
            (T0, T1)
            (T0, T1, T2)
            (T0, T1, T2, T3)
            (T0, T1, T2, T3, T4)
            (T0, T1, T2, T3, T4, T5)
            (T0, T1, T2, T3, T4, T5, T6)
            (T0, T1, T2, T3, T4, T5, T6, T7)
          and 143 others
  = note: required for `&'insert diesel::sql_types::Inet` to implement `diesel::Expression`
  = note: required for `&'insert diesel::sql_types::Inet` to implement `AsExpression<diesel::sql_types::Inet>`
  = note: this error originates in the derive macro `Insertable` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `uuid::Uuid: diesel::Expression` is not satisfied
  --> database_logger/src/dal/sch_models.rs:13:9
   |
13 |     pub element_id: Uuid,
   |         ^^^^^^^^^^ the trait `diesel::Expression` is not implemented for `uuid::Uuid`
   |
   = help: the following other types implement trait `diesel::Expression`:
             &T
             (T0, T1)
             (T0, T1, T2)
             (T0, T1, T2, T3)
             (T0, T1, T2, T3, T4)
             (T0, T1, T2, T3, T4, T5)
             (T0, T1, T2, T3, T4, T5, T6)
             (T0, T1, T2, T3, T4, T5, T6, T7)
           and 143 others
   = note: required for `uuid::Uuid` to implement `AsExpression<diesel::sql_types::Text>`

error[E0277]: the trait bound `diesel::sql_types::Inet: diesel::Expression` is not satisfied
  --> database_logger/src/dal/sch_models.rs:14:9
   |
14 |     pub ip: Inet,
   |         ^^ the trait `diesel::Expression` is not implemented for `diesel::sql_types::Inet`
   |
   = help: the following other types implement trait `diesel::Expression`:
             &T
             (T0, T1)
             (T0, T1, T2)
             (T0, T1, T2, T3)
             (T0, T1, T2, T3, T4)
             (T0, T1, T2, T3, T4, T5)
             (T0, T1, T2, T3, T4, T5, T6)
             (T0, T1, T2, T3, T4, T5, T6, T7)
           and 143 others
   = note: required for `diesel::sql_types::Inet` to implement `AsExpression<diesel::sql_types::Inet>`

error[E0277]: the trait bound `uuid::Uuid: diesel::Expression` is not satisfied
  --> database_logger/src/dal/sch_models.rs:13:9
   |
13 |     pub element_id: Uuid,
   |         ^^^^^^^^^^ the trait `diesel::Expression` is not implemented for `uuid::Uuid`
   |
   = help: the following other types implement trait `diesel::Expression`:
             &T
             (T0, T1)
             (T0, T1, T2)
             (T0, T1, T2, T3)
             (T0, T1, T2, T3, T4)
             (T0, T1, T2, T3, T4, T5)
             (T0, T1, T2, T3, T4, T5, T6)
             (T0, T1, T2, T3, T4, T5, T6, T7)
           and 143 others
   = note: required for `&'insert uuid::Uuid` to implement `diesel::Expression`
   = note: required for `&'insert uuid::Uuid` to implement `AsExpression<diesel::sql_types::Text>`

error[E0277]: the trait bound `diesel::sql_types::Inet: diesel::Expression` is not satisfied
  --> database_logger/src/dal/sch_models.rs:14:9
   |
14 |     pub ip: Inet,
   |         ^^ the trait `diesel::Expression` is not implemented for `diesel::sql_types::Inet`
   |
   = help: the following other types implement trait `diesel::Expression`:
             &T
             (T0, T1)
             (T0, T1, T2)
             (T0, T1, T2, T3)
             (T0, T1, T2, T3, T4)
             (T0, T1, T2, T3, T4, T5)
             (T0, T1, T2, T3, T4, T5, T6)
             (T0, T1, T2, T3, T4, T5, T6, T7)
           and 143 others
   = note: required for `&'insert diesel::sql_types::Inet` to implement `diesel::Expression`
   = note: required for `&'insert diesel::sql_types::Inet` to implement `AsExpression<diesel::sql_types::Inet>`

error[E0277]: the trait bound `uuid::Uuid: diesel::Expression` is not satisfied
  --> database_logger/src/dal/db_operations.rs:49:14
   |
49 |             .values(&new_log)
   |              ^^^^^^ the trait `diesel::Expression` is not implemented for `uuid::Uuid`
   |
   = help: the following other types implement trait `diesel::Expression`:
             &T
             (T0, T1)
             (T0, T1, T2)
             (T0, T1, T2, T3)
             (T0, T1, T2, T3, T4)
             (T0, T1, T2, T3, T4, T5)
             (T0, T1, T2, T3, T4, T5, T6)
             (T0, T1, T2, T3, T4, T5, T6, T7)
           and 143 others
   = note: required for `&uuid::Uuid` to implement `diesel::Expression`
   = note: required for `&uuid::Uuid` to implement `AsExpression<diesel::sql_types::Text>`

error[E0277]: the trait bound `diesel::sql_types::Inet: diesel::Expression` is not satisfied
  --> database_logger/src/dal/db_operations.rs:49:14
   |
49 |             .values(&new_log)
   |              ^^^^^^ the trait `diesel::Expression` is not implemented for `diesel::sql_types::Inet`
   |
   = help: the following other types implement trait `diesel::Expression`:
             &T
             (T0, T1)
             (T0, T1, T2)
             (T0, T1, T2, T3)
             (T0, T1, T2, T3, T4)
             (T0, T1, T2, T3, T4, T5)
             (T0, T1, T2, T3, T4, T5, T6)
             (T0, T1, T2, T3, T4, T5, T6, T7)
           and 143 others
   = note: required for `&diesel::sql_types::Inet` to implement `diesel::Expression`
   = note: required for `&diesel::sql_types::Inet` to implement `AsExpression<diesel::sql_types::Inet>`

error[E0277]: the trait bound `uuid::Uuid: AppearsOnTable<NoFromClause>` is not satisfied
    --> database_logger/src/dal/db_operations.rs:50:22
     |
50   |             .execute(conn);
     |              ------- ^^^^ the trait `AppearsOnTable<NoFromClause>` is not implemented for `uuid::Uuid`
     |              |
     |              required by a bound introduced by this call
     |
     = help: the following other types implement trait `AppearsOnTable<QS>`:
               `&'a T` implements `AppearsOnTable<QS>`
               `(T0, T1)` implements `AppearsOnTable<QS>`
               `(T0, T1, T2)` implements `AppearsOnTable<QS>`
               `(T0, T1, T2, T3)` implements `AppearsOnTable<QS>`
               `(T0, T1, T2, T3, T4)` implements `AppearsOnTable<QS>`
               `(T0, T1, T2, T3, T4, T5)` implements `AppearsOnTable<QS>`
               `(T0, T1, T2, T3, T4, T5, T6)` implements `AppearsOnTable<QS>`
               `(T0, T1, T2, T3, T4, T5, T6, T7)` implements `AppearsOnTable<QS>`
             and 143 others
     = note: required for `&uuid::Uuid` to implement `AppearsOnTable<NoFromClause>`
     = note: required for `DefaultableColumnInsertValue<ColumnInsertValue<element_id, &Uuid>>` to implement `InsertValues<_, operation_logs::table>`
     = note: 1 redundant requirement hidden
     = note: required for `(DefaultableColumnInsertValue<...>, ..., ..., ..., ..., ...)` to implement `InsertValues<_, operation_logs::table>`
     = note: required for `ValuesClause<(..., ..., ..., ..., ..., ...), ...>` to implement `QueryFragment<_>`
     = note: 1 redundant requirement hidden
     = note: required for `InsertStatement<table, ValuesClause<..., ...>>` to implement `QueryFragment<_>`
     = note: required for `InsertStatement<table, ValuesClause<..., ...>>` to implement `ExecuteDsl<_, _>`
note: required by a bound in `diesel::RunQueryDsl::execute`
    --> /home/luis/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/diesel-2.2.7/src/query_dsl/mod.rs:1431:15
     |
1428 |     fn execute(self, conn: &mut Conn) -> QueryResult<usize>
     |        ------- required by a bound in this associated function
...
1431 |         Self: methods::ExecuteDsl<Conn>,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `RunQueryDsl::execute`
     = note: the full name for the type has been written to '/home/luis/Source/inmobify-services/target/debug/deps/database_logger-9d3971b23cf2fea9.long-type-14228139893596894197.txt'
     = note: consider using `--verbose` to print the full type name to the console

error[E0277]: the trait bound `diesel::sql_types::Inet: AppearsOnTable<NoFromClause>` is not satisfied
    --> database_logger/src/dal/db_operations.rs:50:22
     |
50   |             .execute(conn);
     |              ------- ^^^^ the trait `AppearsOnTable<NoFromClause>` is not implemented for `diesel::sql_types::Inet`
     |              |
     |              required by a bound introduced by this call
     |
     = help: the following other types implement trait `AppearsOnTable<QS>`:
               `&'a T` implements `AppearsOnTable<QS>`
               `(T0, T1)` implements `AppearsOnTable<QS>`
               `(T0, T1, T2)` implements `AppearsOnTable<QS>`
               `(T0, T1, T2, T3)` implements `AppearsOnTable<QS>`
               `(T0, T1, T2, T3, T4)` implements `AppearsOnTable<QS>`
               `(T0, T1, T2, T3, T4, T5)` implements `AppearsOnTable<QS>`
               `(T0, T1, T2, T3, T4, T5, T6)` implements `AppearsOnTable<QS>`
               `(T0, T1, T2, T3, T4, T5, T6, T7)` implements `AppearsOnTable<QS>`
             and 143 others
     = note: required for `&diesel::sql_types::Inet` to implement `AppearsOnTable<NoFromClause>`
     = note: required for `DefaultableColumnInsertValue<ColumnInsertValue<ip, &Inet>>` to implement `InsertValues<_, operation_logs::table>`
     = note: 1 redundant requirement hidden
     = note: required for `(DefaultableColumnInsertValue<...>, ..., ..., ..., ..., ...)` to implement `InsertValues<_, operation_logs::table>`
     = note: required for `ValuesClause<(..., ..., ..., ..., ..., ...), ...>` to implement `QueryFragment<_>`
     = note: 1 redundant requirement hidden
     = note: required for `InsertStatement<table, ValuesClause<..., ...>>` to implement `QueryFragment<_>`
     = note: required for `InsertStatement<table, ValuesClause<..., ...>>` to implement `ExecuteDsl<_, _>`
note: required by a bound in `diesel::RunQueryDsl::execute`
    --> /home/luis/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/diesel-2.2.7/src/query_dsl/mod.rs:1431:15
     |
1428 |     fn execute(self, conn: &mut Conn) -> QueryResult<usize>
     |        ------- required by a bound in this associated function
...
1431 |         Self: methods::ExecuteDsl<Conn>,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `RunQueryDsl::execute`
     = note: the full name for the type has been written to '/home/luis/Source/inmobify-services/target/debug/deps/database_logger-9d3971b23cf2fea9.long-type-17837303678389157356.txt'
     = note: consider using `--verbose` to print the full type name to the console

error[E0271]: type mismatch resolving `<Pg as SqlDialect>::InsertWithDefaultKeyword == NotSpecialized`
    --> database_logger/src/dal/db_operations.rs:50:22
     |
50   |             .execute(conn);
     |              ------- ^^^^ expected `NotSpecialized`, found `IsoSqlDefaultKeyword`
     |              |
     |              required by a bound introduced by this call
     |
     = note: required for `DefaultableColumnInsertValue<ColumnInsertValue<element_id, &Uuid>>` to implement `QueryFragment<Pg>`
     = note: required for `DefaultableColumnInsertValue<ColumnInsertValue<element_id, &Uuid>>` to implement `InsertValues<Pg, operation_logs::table>`
     = note: 3 redundant requirements hidden
     = note: required for `InsertStatement<table, ValuesClause<..., ...>>` to implement `QueryFragment<Pg>`
     = note: required for `InsertStatement<table, ValuesClause<..., ...>>` to implement `ExecuteDsl<diesel::PgConnection, Pg>`
note: required by a bound in `diesel::RunQueryDsl::execute`
    --> /home/luis/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/diesel-2.2.7/src/query_dsl/mod.rs:1431:15
     |
1428 |     fn execute(self, conn: &mut Conn) -> QueryResult<usize>
     |        ------- required by a bound in this associated function
...
1431 |         Self: methods::ExecuteDsl<Conn>,
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `RunQueryDsl::execute`
     = note: the full name for the type has been written to '/home/luis/Source/inmobify-services/target/debug/deps/database_logger-9d3971b23cf2fea9.long-type-14228139893596894197.txt'
     = note: consider using `--verbose` to print the full type name to the console

error[E0277]: the trait bound `uuid::Uuid: Serialize` is not satisfied
    --> database_logger/src/dto/new_log.rs:5:26
     |
5    | #[derive ( Debug, Clone, Serialize, Deserialize )]
     |                          ^^^^^^^^^ the trait `Serialize` is not implemented for `uuid::Uuid`
...
10   |     pub element_id: Uuid,
     |     --- required by a bound introduced by this call
     |
     = note: for local types consider adding `#[derive(serde::Serialize)]` to your `uuid::Uuid` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Serialize`:
               &'a T
               &'a mut T
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
               (T0, T1, T2, T3, T4)
             and 129 others
note: required by a bound in `new_log::_::_serde::ser::SerializeStruct::serialize_field`
    --> /home/luis/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.217/src/ser/mod.rs:1867:21
     |
1865 |     fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<(), Self::Error>
     |        --------------- required by a bound in this associated function
1866 |     where
1867 |         T: ?Sized + Serialize;
     |                     ^^^^^^^^^ required by this bound in `SerializeStruct::serialize_field`
     = note: this error originates in the derive macro `Serialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `diesel::sql_types::Inet: Serialize` is not satisfied
    --> database_logger/src/dto/new_log.rs:5:26
     |
5    | #[derive ( Debug, Clone, Serialize, Deserialize )]
     |                          ^^^^^^^^^ the trait `Serialize` is not implemented for `diesel::sql_types::Inet`
...
11   |     pub ip: Inet,
     |     --- required by a bound introduced by this call
     |
     = note: for local types consider adding `#[derive(serde::Serialize)]` to your `diesel::sql_types::Inet` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Serialize`:
               &'a T
               &'a mut T
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
               (T0, T1, T2, T3, T4)
             and 129 others
note: required by a bound in `new_log::_::_serde::ser::SerializeStruct::serialize_field`
    --> /home/luis/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.217/src/ser/mod.rs:1867:21
     |
1865 |     fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<(), Self::Error>
     |        --------------- required by a bound in this associated function
1866 |     where
1867 |         T: ?Sized + Serialize;
     |                     ^^^^^^^^^ required by this bound in `SerializeStruct::serialize_field`
     = note: this error originates in the derive macro `Serialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `uuid::Uuid: Deserialize<'_>` is not satisfied
    --> database_logger/src/dto/new_log.rs:10:21
     |
10   |     pub element_id: Uuid,
     |                     ^^^^ the trait `Deserialize<'_>` is not implemented for `uuid::Uuid`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `uuid::Uuid` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a Path
               &'a [u8]
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 141 others
note: required by a bound in `next_element`
    --> /home/luis/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.217/src/de/mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `diesel::sql_types::Inet: Deserialize<'_>` is not satisfied
    --> database_logger/src/dto/new_log.rs:11:13
     |
11   |     pub ip: Inet,
     |             ^^^^ the trait `Deserialize<'_>` is not implemented for `diesel::sql_types::Inet`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `diesel::sql_types::Inet` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a Path
               &'a [u8]
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 141 others
note: required by a bound in `next_element`
    --> /home/luis/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.217/src/de/mod.rs:1732:12
     |
1730 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1731 |     where
1732 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `uuid::Uuid: Deserialize<'_>` is not satisfied
    --> database_logger/src/dto/new_log.rs:10:21
     |
10   |     pub element_id: Uuid,
     |                     ^^^^ the trait `Deserialize<'_>` is not implemented for `uuid::Uuid`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `uuid::Uuid` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a Path
               &'a [u8]
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 141 others
note: required by a bound in `next_value`
    --> /home/luis/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.217/src/de/mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `diesel::sql_types::Inet: Deserialize<'_>` is not satisfied
    --> database_logger/src/dto/new_log.rs:11:13
     |
11   |     pub ip: Inet,
     |             ^^^^ the trait `Deserialize<'_>` is not implemented for `diesel::sql_types::Inet`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `diesel::sql_types::Inet` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a Path
               &'a [u8]
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 141 others
note: required by a bound in `next_value`
    --> /home/luis/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.217/src/de/mod.rs:1871:12
     |
1869 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1870 |     where
1871 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `uuid::Uuid: Deserialize<'_>` is not satisfied
  --> database_logger/src/dto/new_log.rs:5:37
   |
5  | #[derive ( Debug, Clone, Serialize, Deserialize )]
   |                                     ^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `uuid::Uuid`
   |
   = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `uuid::Uuid` type
   = note: for types from other crates check whether the crate offers a `serde` feature flag
   = help: the following other types implement trait `Deserialize<'de>`:
             &'a Path
             &'a [u8]
             &'a str
             ()
             (T,)
             (T0, T1)
             (T0, T1, T2)
             (T0, T1, T2, T3)
           and 141 others
note: required by a bound in `new_log::_::_serde::__private::de::missing_field`
  --> /home/luis/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.217/src/private/de.rs:25:8
   |
23 | pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>
   |        ------------- required by a bound in this function
24 | where
25 |     V: Deserialize<'de>,
   |        ^^^^^^^^^^^^^^^^ required by this bound in `missing_field`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `diesel::sql_types::Inet: Deserialize<'_>` is not satisfied
  --> database_logger/src/dto/new_log.rs:5:37
   |
5  | #[derive ( Debug, Clone, Serialize, Deserialize )]
   |                                     ^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `diesel::sql_types::Inet`
   |
   = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `diesel::sql_types::Inet` type
   = note: for types from other crates check whether the crate offers a `serde` feature flag
   = help: the following other types implement trait `Deserialize<'de>`:
             &'a Path
             &'a [u8]
             &'a str
             ()
             (T,)
             (T0, T1)
             (T0, T1, T2)
             (T0, T1, T2, T3)
           and 141 others
note: required by a bound in `new_log::_::_serde::__private::de::missing_field`
  --> /home/luis/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.217/src/private/de.rs:25:8
   |
23 | pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>
   |        ------------- required by a bound in this function
24 | where
25 |     V: Deserialize<'de>,
   |        ^^^^^^^^^^^^^^^^ required by this bound in `missing_field`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

Some errors have detailed explanations: E0271, E0277.
For more information about an error, try `rustc --explain E0271`.
warning: `database_logger` (bin "database_logger") generated 2 warnings
error: could not compile `database_logger` (bin "database_logger") due to 29 previous errors; 2 warnings emitted
